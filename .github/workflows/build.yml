name: Build

on:
    push:
    pull_request:

jobs:
    prepare:
        runs-on: ubuntu-stable

        steps:
            - name: Check out
              uses: actions/checkout@v4
            - name: Set up Node
              uses: actions/setup-node@v4
              with:
                  node-version: 18
            - id: cache
              name: Yarn Cache Dir
              run: echo "value=$(yarn cache dir)" >> $GITHUB_OUTPUT
            - name: Restore Lockfile
              uses: actions/cache@v3
              with:
                  path: yarn.lock
                  key: yarn-lock-${{ github.sha }}
            - name: Restore Cache
              uses: actions/cache@v3
              with:
                  path: ${{ steps.cache.outputs.value }}
                  key: yarn-cache-${{ github.sha }}-node-18
            - name: Use yarn lastest
              run: yarn set version stable
            - name: Install
              run: yarn

        outputs:
            cache-dir: ${{ steps.cache.outputs.value }}

    build:
        runs-on: ubuntu-stable
        needs:
            - prepare

        steps:
            - name: Check out
              uses: actions/checkout@v4
            - name: Set up Node
              uses: actions/setup-node@v4
              with:
                  node-version: 18
            - name: Restore Lockfile
              uses: actions/cache@v3
              with:
                  path: yarn.lock
                  key: yarn-lock-${{ github.sha }}
            - name: Restore Cache
              uses: actions/cache@v3
              with:
                  path: ${{ needs.prepare.outputs.cache-dir }}
                  key: yarn-cache-${{ github.sha }}-node-18
            - name: Use yarn lastest
              run: yarn set version stable
            - name: Install
              run: yarn
            - name: Build Clean
              run: yarn build --clean
            - name: Build
              run: yarn build
            - name: Upload Packages
              uses: actions/upload-artifact@v3
              with:
                  name: packages
                  path: |
                      packages
                      plugins

    lint:
        if: ${{  github.event_name == 'pull_request' }}
        runs-on: ubuntu-stable
        needs:
            - prepare

        steps:
            - name: Check out
              uses: actions/checkout@v4
            - name: Set up Node
              uses: actions/setup-node@v4
              with:
                  node-version: 18
            - name: Restore Lockfile
              uses: actions/cache@v3
              with:
                  path: yarn.lock
                  key: yarn-lock-${{ github.sha }}
            - name: Restore Cache
              uses: actions/cache@v3
              with:
                  path: ${{ needs.prepare.outputs.cache-dir }}
                  key: yarn-cache-${{ github.sha }}-node-18
            - name: Use yarn lastest
              run: yarn set version stable
            - name: Install
              run: yarn
            - name: Lint
              run: yarn lint

    unit-test:
        if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
        runs-on: ubuntu-stable
        needs:
            - prepare

        steps:
            - name: Check out
              uses: actions/checkout@v4
            - name: Set up Node
              uses: actions/setup-node@v4
              with:
                  node-version: 18
            - name: Restore Lockfile
              uses: actions/cache@v3
              with:
                  path: yarn.lock
                  key: yarn-lock-${{ github.sha }}
            - name: Restore Cache
              uses: actions/cache@v3
              with:
                  path: ${{ needs.prepare.outputs.cache-dir }}
                  key: yarn-cache-${{ github.sha }}-node-18
                  restore-keys: yarn-cache-${{ github.sha }}-node\
            - name: Use yarn lastest
              run: yarn set version stable
            - name: Install
              run: yarn
            - name: Unit Test
              run: yarn test:json
            - name: Report Coverage
              uses: codecov/codecov-action@v3
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  file: ./coverage/coverage-final.json
                  name: codecov
